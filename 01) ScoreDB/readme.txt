성적표관리(ScoreDB)


 피클을 사용하여 파일을 불러오고, 저장하는 등 전체적인 틀은 test3_4.py를 따랐습니다. 

 .추가로 해결해야할 과제: 
    1)Age와 Score는 integer로 인식하도록함.
	-  readScoreDB가 실행된후 실행하는 setScoreDB 함수를 만들어 이를 구현하였습니다. 이 함수에서는 for문을 통해 scdb를 훑으면서 int()메소드를 통해 해당 사전의 값을 정수로 변환합니다. 그러나, 이름같은 문자열은 int를 사용할 수 없으니, try-except를 사용해 int()가 안될 때 그냥 패스하도록 함수를 구현하였습니다.

    2)find 명령 추가
	- scdb안의 사전들을 for문을 통해 훑으면서 parase[1]로 전달된 이름이 해당 사전에 있는 지 if를 통해 판별한 후 해당 이름이 있으면, 해당 이름을 가진 사전의 내용을 출력하도록 구성하였습니다. 출력하는 방법은 showScoreDB함수와 동일합니다.

    3)inc 명령 추가
	- find 명령 때처럼 for문을 통해 사전을 훑으면서 parse[1]로 전달된 이름을 가진 사전에서의 Score값을 amount만큼 변화시킵니다. 

    4)del 명령 수정
	- parse[1]로 전달되는 이름을 가진 모두 삭제하도록 수정해야 했습니다. 이를 위해 먼저 dellist란 리스트를 빈리스트로 초기화 하였고, for문을 통해 사전들을 훑으면서 parse[1]로 전달된 이름을 해당 사전이 갖고있는지를 판별하면, dellist에 그 사전 정보를 넣습니다. 이 작업이 끝나면, dellist가 비어있지 않을 경우, 이 리스트를 for를 통해 훑으면서 그 내용을 scdb에서 제거합니다. 

    5)Error 처리 최대로 함
	- 일단 모든 명령어가 성공적으로 수행시, 사용자가 이를 알 수 있게 성공메세지를 출력했습니다. 단, show처럼 결과가 출력되는 명령어에서는 따로 추가하지 않았습니다.
그리고, 해당 명령 실패시 어떤 이유로 실패했는지, 성공적으로 명령어를 수행하기 위해서 해야할 것을 출력하였습니다.
	- IndexError (인자를 충분히 기입하지 않았을 경우): add, del, inc
	- ValueError (올바르지 않은 타입의 인자를 사용했을경우): add, inc
	- KeyError (없는 Key를 통해 데이터에 접근하려는 경우): show
	- exist 변수 (인자에 해당하는 이름이 데이터에 없는 경우): find, inc, del(dellist 함수 또한 이와 같은 역할을 수행)

